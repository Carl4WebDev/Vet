import React, { useEffect, useState } from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import { getFreelancePetDetails } from "../../api/pet-owners/getFreelancePetDetails";
import jsPDF from "jspdf";

import defaultImg from "../../assets/nav-profile.png";

const PetDetailsFreelancer = () => {
  const { petId } = useParams();
  const navigate = useNavigate();
  const [pet, setPet] = useState(null);
  const [records, setRecords] = useState([]);
  const [selectedRecord, setSelectedRecord] = useState(null); // ‚úÖ modal state

  // üìÖ Helper formatters
  const formatDate = (date) =>
    date ? new Date(date).toLocaleDateString("en-PH") : "N/A";

  const formatTime = (time) =>
    time ? new Date(`1970-01-01T${time}`).toLocaleTimeString("en-PH") : "N/A";

  // üìÑ Generate clean printable PDF
  const handleDownloadPDF = () => {
    const record = selectedRecord;
    if (!record || !pet) return;

    const doc = new jsPDF();
    let y = 15;

    // Header
    doc.setFontSize(16);
    doc.setFont("helvetica", "bold");
    doc.text("Veterinary Medical Record", 14, y);
    y += 8;

    doc.setFontSize(10);
    doc.setFont("helvetica", "normal");
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 14, y);
    y += 8;

    // Pet Info
    doc.setFont("helvetica", "bold");
    doc.text("Pet Information", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    doc.text(`Name: ${pet.pet_name}`, 14, y);
    y += 5;
    doc.text(`Age: ${pet.pet_age || "N/A"} year(s)`, 14, y);
    y += 5;
    doc.text(`Species: ${pet.pet_species || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Breed: ${pet.pet_breed || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Gender: ${pet.pet_gender || "N/A"}`, 14, y);
    y += 8;

    // Visit Info
    doc.setFont("helvetica", "bold");
    doc.text("Visit Information", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    doc.text(`Visit Date: ${formatDate(record.visit_date)}`, 14, y);
    y += 5;
    doc.text(`Visit Time: ${formatTime(record.visit_time)}`, 14, y);
    y += 5;
    doc.text(`Duration: ${record.duration || "N/A"} minutes`, 14, y);
    y += 5;
    doc.text(`Visit Type: ${record.visit_type || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Veterinarian: ${record.veterinarian_name || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Chief Complaint: ${record.chief_complaint || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Visit Reason: ${record.visit_reason || "N/A"}`, 14, y);
    y += 8;

    // Tests
    doc.setFont("helvetica", "bold");
    doc.text("Tests and Procedures", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    doc.text(`Fecal Examination: ${record.fecal_examination || "N/A"}`, 14, y);
    y += 5;
    doc.text(
      `Physical Examination: ${record.physical_examination || "N/A"}`,
      14,
      y
    );
    y += 8;

    // Diagnosis
    doc.setFont("helvetica", "bold");
    doc.text("Diagnosis and Assessment", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    doc.text(`Primary Diagnosis: ${record.primary_diagnosis || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Body Condition: ${record.body_condition || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Overall Health: ${record.overall_health || "N/A"}`, 14, y);
    y += 8;

    // Treatment
    doc.setFont("helvetica", "bold");
    doc.text("Treatment and Medication", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    doc.text(`Medication Given: ${record.medication_given || "None"}`, 14, y);
    y += 5;
    doc.text(`Prescriptions: ${record.prescriptions || "None"}`, 14, y);
    y += 5;
    doc.text(`Treatment: ${record.treatment || "None"}`, 14, y);
    y += 8;

    // Vital Signs
    doc.setFont("helvetica", "bold");
    doc.text("Vital Signs", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    doc.text(`Weight: ${record.vital_weight || "N/A"} kg`, 14, y);
    y += 5;
    doc.text(`Temperature: ${record.vital_temperature || "N/A"} ¬∞C`, 14, y);
    y += 5;
    doc.text(`Heart Rate: ${record.vital_heart_rate || "N/A"}`, 14, y);
    y += 5;
    doc.text(`Resp. Rate: ${record.vital_resp_rate || "N/A"}`, 14, y);
    y += 8;

    // Notes
    doc.setFont("helvetica", "bold");
    doc.text("Notes & Actions", 14, y);
    y += 6;
    doc.setFont("helvetica", "normal");
    const splitRemarks = doc.splitTextToSize(
      `Remarks: ${record.notes || "None"}`,
      180
    );
    doc.text(`Action: ${record.key_action || "None"}`, 14, y);
    y += 5;
    doc.text(splitRemarks, 14, y);
    y += splitRemarks.length * 5 + 5;

    // Footer
    doc.line(14, y, 196, y);
    y += 6;
    doc.setFontSize(10);
    doc.text("This report is system-generated by VetConnect.", 14, y);

    // Save
    const filename = `Medical_Record_${pet.pet_name}_${record.record_id}.pdf`;
    doc.save(filename);
  };

  useEffect(() => {
    (async () => {
      const data = await getFreelancePetDetails(petId);
      setPet(data.pet || null);
      setRecords(data.medical || []);
    })();
  }, [petId]);

  if (!pet) return <p>Loading...</p>;

  return (
    <div className="space-y-6">
      <Link
        to="/vet-freelancer/home/pet-owners"
        className="text-blue-500 text-sm hover:underline"
      >
        ‚Üê Back to Owners
      </Link>

      {/* üê∂ Pet Info Header */}
      <div className="bg-white rounded-lg shadow p-4 flex flex-col md:flex-row justify-between">
        <div className="flex items-center gap-4">
          <img
            src={pet.pet_image_url || defaultImg}
            alt="Pet"
            className="w-24 h-24 rounded-full object-cover border"
          />
          <div>
            <h2 className="font-semibold text-lg">{pet.pet_name}</h2>
            <p className="text-sm text-gray-600">Species: {pet.pet_species}</p>
            <p className="text-sm text-gray-600">
              Breed: {pet.pet_breed || "N/A"} | Gender: {pet.pet_gender}
            </p>
            <p className="text-sm text-gray-600">
              Age: {pet.pet_age || "N/A"} | Weight: {pet.pet_weight || "N/A"} kg
            </p>
            <p className="text-sm text-gray-600">
              Veterinarian: {pet.veterinarian_name || "N/A"}
            </p>
          </div>
        </div>

        <div className="mt-4 md:mt-0 flex flex-col justify-center items-start md:items-end">
          <Link to={`/vet-freelancer/home/add-pet/${petId}`}>
            <button className="bg-red-500 text-white text-sm px-3 py-2 rounded hover:bg-red-600">
              + New Health Record
            </button>
          </Link>
          <div className="flex items-center gap-2 mt-2">
            <img
              src={pet.client_image_url || defaultImg}
              alt="Owner"
              className="w-8 h-8 rounded-full object-cover border"
            />
            <p className="text-sm text-gray-700">
              {pet.client_name} ({pet.client_phone})
            </p>
          </div>
        </div>
      </div>

      {/* üßæ Medical History */}
      <div>
        <h3 className="bg-black text-white px-4 py-2 rounded-t-md font-semibold">
          Medical
        </h3>

        {records.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 mt-4">
            {records.map((rec) => (
              <div
                key={rec.record_id}
                onClick={() => setSelectedRecord(rec)} // ‚úÖ open modal
                className="bg-white shadow rounded-lg p-4 text-sm cursor-pointer hover:shadow-lg transition"
              >
                <h4 className="font-semibold mb-2">{rec.label}</h4>
                <p>
                  <strong>Date:</strong>{" "}
                  {rec.visit_date
                    ? new Date(rec.visit_date).toLocaleDateString("en-PH")
                    : "N/A"}
                </p>
                <p>
                  <strong>Veterinarian:</strong>{" "}
                  {rec.veterinarian_name || "N/A"}
                </p>
                <p>
                  <strong>Diagnosis:</strong> {rec.primary_diagnosis || "N/A"}
                </p>
                <p>
                  <strong>Treatment:</strong> {rec.treatment || "N/A"}
                </p>
                <p>
                  <strong>Medication:</strong> {rec.medication_given || "N/A"}
                </p>
                <p>
                  <strong>Remarks:</strong> {rec.notes || "N/A"}
                </p>
              </div>
            ))}
          </div>
        ) : (
          <p className="italic text-gray-500 mt-3">
            No medical history available for this pet.
          </p>
        )}
      </div>

      {/* üß© Modal for detailed view */}
      {selectedRecord && (
        <div className="fixed inset-0 bg-black/40 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg w-full max-w-5xl shadow-lg relative overflow-y-auto max-h-[90vh]">
            {/* Header */}
            <div className="bg-blue-700 text-white p-3 flex justify-between items-center rounded-t-lg">
              <h2 className="font-semibold">
                Medical History #{selectedRecord.record_id}
              </h2>
              <button
                className="text-white hover:text-gray-200"
                onClick={() => setSelectedRecord(null)}
              >
                ‚úï
              </button>
            </div>

            {/* Modal Body */}
            <div className="p-4 space-y-4">
              {/* Pet + Owner Display */}
              <div className="flex flex-col md:flex-row items-center gap-6 border-b pb-4">
                <div className="flex items-center gap-3">
                  <img
                    src={pet.pet_image_url || defaultImg}
                    alt="Pet"
                    className="w-20 h-20 rounded-full border object-cover"
                  />
                  <div>
                    <h3 className="font-semibold text-lg">{pet.pet_name}</h3>
                    <p className="text-sm text-gray-600">
                      {pet.pet_species} | {pet.pet_breed}
                    </p>
                  </div>
                </div>

                <div className="flex items-center gap-3 md:ml-auto">
                  <img
                    src={pet.client_image_url || defaultImg}
                    alt="Owner"
                    className="w-16 h-16 rounded-full border object-cover"
                  />
                  <div>
                    <h4 className="font-semibold">{pet.client_name}</h4>
                    <p className="text-sm text-gray-600">{pet.client_phone}</p>
                  </div>
                </div>
              </div>

              {/* Visit Details */}
              <div className="grid grid-cols-2 md:grid-cols-4 gap-3 text-sm">
                <div>
                  <p className="font-semibold text-gray-700">Visit Date</p>
                  <p>{selectedRecord.visit_date || "N/A"}</p>
                </div>
                <div>
                  <p className="font-semibold text-gray-700">Time</p>
                  <p>{selectedRecord.visit_time || "N/A"}</p>
                </div>
                <div>
                  <p className="font-semibold text-gray-700">Duration</p>
                  <p>{selectedRecord.duration || "N/A"}</p>
                </div>
                <div>
                  <p className="font-semibold text-gray-700">Visit Type</p>
                  <p>{selectedRecord.visit_type || "N/A"}</p>
                </div>
              </div>

              {/* Grouped Sections */}
              <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 text-sm">
                <div className="border rounded p-3">
                  <h4 className="font-semibold mb-2">Visit Information</h4>
                  <p>Veterinarian: {selectedRecord.veterinarian_name}</p>
                  <p>
                    Chief Complaint: {selectedRecord.chief_complaint || "N/A"}
                  </p>
                  <p>Visit Reason: {selectedRecord.visit_reason || "N/A"}</p>
                </div>

                <div className="border rounded p-3">
                  <h4 className="font-semibold mb-2">Test and Procedures</h4>
                  <p>Fecal Exam: {selectedRecord.fecal_examination || "N/A"}</p>
                  <p>
                    Physical Exam:{" "}
                    {selectedRecord.physical_examination || "N/A"}
                  </p>
                </div>

                <div className="border rounded p-3">
                  <h4 className="font-semibold mb-2">
                    Diagnosis and Assessment
                  </h4>
                  <p>Diagnosis: {selectedRecord.primary_diagnosis || "N/A"}</p>
                  <p>
                    Body Condition: {selectedRecord.body_condition || "N/A"}
                  </p>
                  <p>
                    Overall Health: {selectedRecord.overall_health || "N/A"}
                  </p>
                </div>

                <div className="border rounded p-3">
                  <h4 className="font-semibold mb-2">
                    Treatment and Medication
                  </h4>
                  <p>Medication: {selectedRecord.medication_given || "N/A"}</p>
                  <p>Prescriptions: {selectedRecord.prescriptions || "N/A"}</p>
                  <p>Treatment: {selectedRecord.treatment || "N/A"}</p>
                </div>

                <div className="border rounded p-3">
                  <h4 className="font-semibold mb-2">Notes & Action</h4>
                  <p>Action: {selectedRecord.key_action || "N/A"}</p>
                  <p>Remarks: {selectedRecord.notes || "N/A"}</p>
                </div>

                <div className="border rounded p-3">
                  <h4 className="font-semibold mb-2">Vital Signs</h4>
                  <p>Weight: {selectedRecord.vital_weight || "N/A"} kg</p>
                  <p>
                    Temperature: {selectedRecord.vital_temperature || "N/A"}¬∞C
                  </p>
                  <p>Heart Rate: {selectedRecord.vital_heart_rate || "N/A"}</p>
                  <p>Resp. Rate: {selectedRecord.vital_resp_rate || "N/A"}</p>
                </div>
              </div>
              {/* üßæ Attached Documents Section */}
              {selectedRecord.documents &&
                selectedRecord.documents.length > 0 && (
                  <div className="border rounded p-3">
                    <h4 className="font-semibold mb-3">Attached Documents</h4>
                    <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3">
                      {selectedRecord.documents.map((doc, index) => {
                        const isImage = doc.mime_type?.startsWith("image/");
                        return (
                          <div
                            key={index}
                            className="border rounded-md overflow-hidden bg-gray-50 shadow-sm"
                          >
                            {isImage ? (
                              <img
                                src={doc.document_url || defaultImg}
                                alt={doc.file_name}
                                className="w-full h-32 object-cover"
                              />
                            ) : (
                              <div className="h-32 flex items-center justify-center bg-gray-200 text-sm text-gray-600">
                                üìÑ {doc.file_name}
                              </div>
                            )}
                            <div className="p-2 text-xs flex justify-between items-center">
                              <span className="truncate w-[70%]">
                                {doc.file_name}
                              </span>
                              <a
                                href={doc.document_url}
                                target="_blank"
                                rel="noopener noreferrer"
                                className="text-blue-500 hover:underline text-xs"
                              >
                                View
                              </a>
                            </div>
                          </div>
                        );
                      })}
                    </div>
                  </div>
                )}

              {/* Footer Buttons */}
              <div className="flex justify-end gap-3 pt-3">
                <button
                  onClick={handleDownloadPDF}
                  className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
                >
                  Download PDF
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default PetDetailsFreelancer;
